name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

env:
  APPLICATION_ID: '392df650-a705-11ea-9f5d-61fe147bebd6'
  PACKAGE_NAME: 'seconddemoapp'
  VERSION: '0.0.3'
  HOSTNAME: 'bcdemo02bbb.azurewebsites.net/wwwroot'

jobs:
  build_and_deploy_job:
    #if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: Build Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_SMOKE_0BF030C03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "api" # Api source code path - optional
          app_artifact_location: "dist/web" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  build:
    runs-on: ubuntu-latest
    name: Generate & Upload Teams App manifest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: npm ci
    - run: npm run build --if-present
    - run: gulp manifest
    - name: Upload a Build Artifact - Teams App
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: App Manifest # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: ./package
    - name: Upload a Build Artifact - App
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: App # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: ./dist
    #- name: Install M365 CLI
    #  run: npm install -q @pnp/office365-cli
    - name: Office 365 CLI Login
      uses: pnp/action-cli-login@v1.0.0
      with:
        # Username (email address) of the admin
        ADMIN_USERNAME: ${{ secrets.adminUsername }}
        # Password of the admin
        ADMIN_PASSWORD: ${{ secrets.adminPassword }}
    - name: Office 365 CLI Run Script
      uses: pnp/action-cli-runscript@v1.0.0
      with:
        # Relative path of the script in your repo.
        O365_CLI_SCRIPT_PATH: './scripts/upload_manifest.sh' # optional
        # Office 365 CLI Script
        # O365_CLI_SCRIPT: # optional
        # Used only with O365_CLI_SCRIPT. If true the assumption is the script passed in O365_CLI_SCRIPT will be a PowerShell script, otherwise the assumption is bash script. Default is false
        IS_POWERSHELL: false # optional
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: 'bcdemo02bbb'
        # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.PUBLISH_PROFILE }} # optional
        # Enter an existing Slot other than the Production slot
        #slot-name: # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: './dist' # optional, default is .
        # Enter the start up command. For ex. dotnet run or dotnet run
        #startup-command: # optional

  #deploy:
  #  runs-on: ubuntu-latest
  #  name: Deploy
  #  steps:
  #  - uses: actions/checkout@v2

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_SMOKE_0BF030C03 }}
          action: "close"
